<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CryptoTradeKit.Net</name>
    </assembly>
    <members>
        <member name="T:CryptoTradeKit.Net.Enums.ExchangeName">
            <summary>
            Exchange name
            </summary>
        </member>
        <member name="F:CryptoTradeKit.Net.Enums.ExchangeName.Binance">
            <summary>
            Binance
            </summary>
        </member>
        <member name="F:CryptoTradeKit.Net.Enums.ExchangeName.BingX">
            <summary>
            BingX
            </summary>
        </member>
        <member name="F:CryptoTradeKit.Net.Enums.ExchangeName.Kucoin">
            <summary>
            Kucoin
            </summary>
        </member>
        <member name="T:CryptoTradeKit.Net.ExchangeOrderBookFactory">
            <inheritdoc />
        </member>
        <member name="P:CryptoTradeKit.Net.ExchangeOrderBookFactory.Binance">
            <inheritdoc />
        </member>
        <member name="P:CryptoTradeKit.Net.ExchangeOrderBookFactory.BingX">
            <inheritdoc />
        </member>
        <member name="P:CryptoTradeKit.Net.ExchangeOrderBookFactory.Kucoin">
            <inheritdoc />
        </member>
        <member name="M:CryptoTradeKit.Net.ExchangeOrderBookFactory.#ctor(Binance.Net.Interfaces.IBinanceOrderBookFactory,BingX.Net.Interfaces.IBingXOrderBookFactory,Kucoin.Net.Interfaces.IKucoinOrderBookFactory)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="T:CryptoTradeKit.Net.ExchangeRestClient">
            <inheritdoc />
        </member>
        <member name="P:CryptoTradeKit.Net.ExchangeRestClient.Binance">
            <inheritdoc />
        </member>
        <member name="P:CryptoTradeKit.Net.ExchangeRestClient.BingX">
            <inheritdoc />
        </member>
        <member name="P:CryptoTradeKit.Net.ExchangeRestClient.Kucoin">
            <inheritdoc />
        </member>
        <member name="M:CryptoTradeKit.Net.ExchangeRestClient.#ctor(Binance.Net.Interfaces.Clients.IBinanceRestClient,BingX.Net.Interfaces.Clients.IBingXRestClient,Kucoin.Net.Interfaces.Clients.IKucoinRestClient,System.Collections.Generic.IEnumerable{CryptoExchange.Net.Interfaces.CommonClients.ISpotClient})">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:CryptoTradeKit.Net.ExchangeRestClient.GetUnifiedSpotClient(CryptoTradeKit.Net.Enums.ExchangeName)">
            <inheritdoc />
        </member>
        <member name="M:CryptoTradeKit.Net.ExchangeRestClient.GetUnifiedSpotClients">
            <inheritdoc />
        </member>
        <member name="T:CryptoTradeKit.Net.Exchanges">
            <summary>
            
            </summary>
        </member>
        <member name="E:CryptoTradeKit.Net.Exchanges.RateLimitTriggered">
            <summary>
            Event for when a rate limit is triggered in any of the exchange clients
            </summary>
        </member>
        <member name="T:CryptoTradeKit.Net.ExchangeSocketClient">
            <inheritdoc />
        </member>
        <member name="P:CryptoTradeKit.Net.ExchangeSocketClient.Binance">
            <inheritdoc />
        </member>
        <member name="P:CryptoTradeKit.Net.ExchangeSocketClient.BingX">
            <inheritdoc />
        </member>
        <member name="P:CryptoTradeKit.Net.ExchangeSocketClient.Kucoin">
            <inheritdoc />
        </member>
        <member name="M:CryptoTradeKit.Net.ExchangeSocketClient.#ctor(Binance.Net.Interfaces.Clients.IBinanceSocketClient,BingX.Net.Interfaces.Clients.IBingXSocketClient,Kucoin.Net.Interfaces.Clients.IKucoinSocketClient)">
            <summary>
            ctor
            </summary>
        </member>
        <member name="T:CryptoTradeKit.Net.ExtensionMethods.ServiceCollectionExtensions">
            <summary>
            Extensions for DI
            </summary>
        </member>
        <member name="M:CryptoTradeKit.Net.ExtensionMethods.ServiceCollectionExtensions.AddCryptools(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{CryptoTradeKit.Net.Models.GlobalExchangeOptions},System.Action{Binance.Net.Objects.Options.BinanceRestOptions},System.Action{Binance.Net.Objects.Options.BinanceSocketOptions},System.Action{BingX.Net.Objects.Options.BingXRestOptions},System.Action{BingX.Net.Objects.Options.BingXSocketOptions},System.Action{Kucoin.Net.Objects.Options.KucoinRestOptions},System.Action{Kucoin.Net.Objects.Options.KucoinSocketOptions})">
            <summary>
            Add all the exchange clients to the service collection as well as the IExchangeRestClient, IExchangeSocketClient and IExchangeOrderBookFactory aggregation interfaces
            </summary>
            <param name="services">The service collection</param>
            <param name="globalOptions">The options to be applied for each exchange client. Can be overridden by providing exchange specific options.</param>
            <param name="binanceRestOptions">The options options for the Binance rest client. Will override options provided in the global options</param>
            <param name="binanceSocketOptions">The options options for the Binance socket client. Will override options provided in the global options</param>
            <param name="bingxRestOptions">The options options for the BingX rest client. Will override options provided in the global options</param>
            <param name="bingxSocketOptions">The options options for the BingX socket client. Will override options provided in the global options</param>
            <param name="kucoinRestOptions">The options options for the Kucoin rest client. Will override options provided in the global options</param>
            <param name="kucoinSocketOptions">The options options for the Kucoin socket client. Will override options provided in the global options</param>
            <returns></returns>
        </member>
        <member name="T:CryptoTradeKit.Net.Interfaces.IExchangeOrderBookFactory">
            <summary>
            Factory for creating SymbolOrderBook instances; locally synced order books.
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Interfaces.IExchangeOrderBookFactory.Binance">
            <summary>
            Binance factory
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Interfaces.IExchangeOrderBookFactory.BingX">
            <summary>
            BingX factory
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Interfaces.IExchangeOrderBookFactory.Kucoin">
            <summary>
            Kucoin factory
            </summary>
        </member>
        <member name="T:CryptoTradeKit.Net.Interfaces.IExchangeRestClient">
            <summary>
            Client for accessing the exchange REST API's.
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Interfaces.IExchangeRestClient.Binance">
            <summary>
            Binance REST API
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Interfaces.IExchangeRestClient.BingX">
            <summary>
            BingX REST API
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Interfaces.IExchangeRestClient.Kucoin">
            <summary>
            Kucoin REST API
            </summary>
        </member>
        <member name="M:CryptoTradeKit.Net.Interfaces.IExchangeRestClient.GetUnifiedSpotClient(CryptoTradeKit.Net.Enums.ExchangeName)">
            <summary>
            Get an ISpotClient for the specific exchange. 
            </summary>
            <param name="exchange">Exchange</param>
            <returns></returns>
        </member>
        <member name="M:CryptoTradeKit.Net.Interfaces.IExchangeRestClient.GetUnifiedSpotClients">
            <summary>
            Get all ISpotClient interfaces
            </summary>
            <returns></returns>
        </member>
        <member name="T:CryptoTradeKit.Net.Interfaces.IExchangeSocketClient">
            <summary>
            Client for accessing the exchange Websocket API's.
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Interfaces.IExchangeSocketClient.Binance">
            <summary>
            Binance Websocket API
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Interfaces.IExchangeSocketClient.BingX">
            <summary>
            BingX Websocket API
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Interfaces.IExchangeSocketClient.Kucoin">
            <summary>
            Kucoin Websocket API
            </summary>
        </member>
        <member name="T:CryptoTradeKit.Net.Models.ExchangeCredentials">
            <summary>
            Credentials for each exchange
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Models.ExchangeCredentials.Binance">
            <summary>
            Binance API credentials
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Models.ExchangeCredentials.BingX">
            <summary>
            BingX API credentials
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Models.ExchangeCredentials.Kucoin">
            <summary>
            Kucoin API credentials
            </summary>
        </member>
        <member name="T:CryptoTradeKit.Net.Models.GlobalExchangeOptions">
            <summary>
            Options to apply to any exchange client (if not overridden)
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Models.GlobalExchangeOptions.Default">
            <summary>
            Default global options
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Models.GlobalExchangeOptions.ApiCredentials">
            <summary>
            API credentials configuration for exchanges
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Models.GlobalExchangeOptions.Proxy">
            <summary>
            Proxy settings
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Models.GlobalExchangeOptions.OutputOriginalData">
            <summary>
            If true, the CallResult and DataEvent objects will also include the originally received json data in the OriginalData property
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Models.GlobalExchangeOptions.RequestTimeout">
            <summary>
            The max time a request is allowed to take
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Models.GlobalExchangeOptions.RateLimiterEnabled">
            <summary>
            Whether or not client side rate limiting should be applied
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Models.GlobalExchangeOptions.RateLimitingBehaviour">
            <summary>
            What should happen when a rate limit is reached
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Models.GlobalExchangeOptions.AutoReconnect">
            <summary>
            Whether or not a socket connection should automatically reconnect when losing connection
            </summary>
        </member>
        <member name="P:CryptoTradeKit.Net.Models.GlobalExchangeOptions.ReconnectInterval">
            <summary>
            Time to wait between socket reconnect attempts
            </summary>
        </member>
    </members>
</doc>
